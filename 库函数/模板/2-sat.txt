#include<cstdio>
#include<cmath>
#include<map>
#include<set>
#include<queue>
#include<deque>
#include<string>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

const int N = 1110;

struct TwoSAT{
    int n;
    vector<int> g[N * 2];
    bool mark[N * 2];
    int S[N * 2], c;
    bool dfs(int x){
     //   cout << "dfs " << x << ' ' << endl;
        if(mark[x ^ 1]) return false;
        if(mark[x]) return true;
        mark[x] = true;
        S[c++] = x;
        for(int i = 0; i < g[x].size(); ++i)
        if(!dfs(g[x][i])) return false;
        return true;
    }
    void init(int n){
        this->n = n;
        for(int i = 0; i < n * 2; ++i) g[i].clear();
        memset(mark, 0, sizeof(mark));
    }
    void add_clause(int x, int xval, int y, int yval){ // x = xval or y = yval ， x = 0 时，注意看x的值
        x = x * 2 + xval;
        y = y * 2 + yval;
        g[x ^ 1].push_back(y);
        g[y ^ 1].push_back(x);
    }
    bool solve(){
        for(int i = 0; i < n * 2; i += 2){
            if(!mark[i] && !mark[i + 1]){
                c = 0;
                if(!dfs(i)){
                    while(c > 0) mark[S[--c]] = false;
                    if(!dfs(i + 1)) return false;
                }
            }
        }
        return true;
    }
}g;

int main(){
    int n, m;
    while(scanf("%d%d", &n, &m), n){
        g.init(n);
        g.mark[1] = true;
        for(int i = 0; i < m; ++i){
            int x1, x2;
            char c1, c2;
            scanf("%d%c%d%c", &x1, &c1, &x2, &c2);
            int y1, y2;
            if(c1 == 'h') y1 = false;
            else y1 = true;
            if(c2 == 'h') y2 = false;
            else y2 = true;
            g.add_clause(x1, y1, x2, y2);
        }
        if(g.solve()){
            for(int i = 1; i < n; ++i)
            if(g.mark[i * 2 + 1]) printf("%dw ", i);
            else printf("%dh ", i);
            puts("");
        }
        else puts("bad luck");
    }
}
